


# Prep your codebase

* add requirements.txt file

* create local_settings.py

* add production database and static settings to settings.py (use example from my repo, you'll only have to change your database password later)

* change the django_class folders to be named django_project (two folders)

* edit settings.py and change django_class to django_project (all instances)

* edit wsgi.py and change django_class to django_project (all instances)

* dump auth.user into soccer/fixtures/initial_data.json to preserve your admin account. Update "soccer" to be your app name. You'll also have to create the fixtures folder.

$ ./manage.py dumpdata auth.user > soccer/fixtures/initial_data.json


# Create Digital Ocean Account

* add your local ssh key

$ pbcopy < ~/.ssh/id_rsa.pub

and then paste that into digital ocean


# Create Digital Ocean Droplet

* give it a name (mexicoder-<yourname>)
* select size $10/month
* select region USA NYC 3
* select application Django on 14.04
* select your ssh key
* NO OTHER SETTINGS


# Setup git repo on droplet

* connect to droplet via ssh
$ ssh root@<droplet IP address> (use your droplet IP address)

* capture the DB password and update your settings
* then drop and create the existing database
$ sudo su - postgres
$ dropdb django
$ createdb django
$ exit

* setup the git repo
$ apt-get install git
$ cd /home/django
$ mkdir repo
$ cd repo
$ git init --bare
$ cd hooks

* edit post-recieve with the script below (dropping ``` of course)

```
#!/bin/sh
git --work-tree=/home/django/django_project --git-dir=/home/django/repo checkout -f

pip install -r /home/django/django_project/requirements.txt

python /home/django/django_project/manage.py migrate --noinput

python /home/django/django_project/manage.py collectstatic --noinput

python /home/django/django_project/manage.py loaddata /home/django/django_project/soccer/fixtures/initial_data.json

service gunicorn restart
```

* make hook executable
$ chmod +x post-recieve

# add production remote to local environment
$ git remote add production ssh://root@<droplet IP address>/home/django/repo

# push code to new production remote

$ git push production master

* if that fails, use this:
$ git push production master --force
